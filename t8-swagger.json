{
    "openapi": "3.1.0",
    "info": {
        "title": "Codepeak Track 8 API Base",
        "description": "This is the REST API for Track 8 Parent applications",
        "termsOfService": "",
        "contact": {
            "name": "Codepeak Technologies Pvt. Ltd.",
            "url": "https://codepeaktechnologies.com/"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:4000",
            "description": "Development Server"
        },
        {
            "url": "https://cpdaily-api.onrender.com",
            "description": "Production Server"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "User Authentication APIs"
        },
        {
            "name": "Batch",
            "description": "Batch APIs"
        },
        {
            "name": "Course",
            "description": "Course APIs"
        },
        {
            "name": "Intern",
            "description": "Intern APIs"
        },
        {
            "name": "Lead",
            "description": "Lead APIs"
        },
        {
            "name": "Ledger",
            "description": "Ledger APIs"
        },
        {
            "name": "Review",
            "description": "Review APIs"
        },
        {
            "name": "Tutor",
            "description": "Tutor APIs"
        },
        {
            "name": "User",
            "description": "User APIs"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "summary": "Login API for T8IRA.",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/credentials"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "user found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "description": "the jwt token generated by the api",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDc3M2FhYmU3NGUyOGE1ODQyNzNhNGUiLCJ1c2VybmFtZSI6ImFkbWluQGNvZGVwZWFrLmNvbSIsInJvbGVzIjpbImFkbWluIl0sImlhdCI6MTY5NjkzNzE4MCwiZXhwIjoxNjk3NTQxOTgwfQ.RFqPIWNeCLnRtZw1ouIYIe-hVXRTYY41NYWASgU_1XA"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "description": "the name of the user",
                                                    "example": "codepeak"
                                                },
                                                "secchanged": {
                                                    "type": "boolean",
                                                    "description": "the bit to know if the user configured an own password",
                                                    "example": true
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "description": "the phone number of the user",
                                                    "example": 9999999999
                                                },
                                                "courseid": {
                                                    "type": "string",
                                                    "description": "Intern's course",
                                                    "example": "93429dskeur23dklsdhu394898"
                                                },
                                                "batchid": {
                                                    "type": "string",
                                                    "description": "Intern's batch",
                                                    "example": "93429dskeur23dklsdhu394898"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "description": "Intern's emailid",
                                                    "example": "name`@`mail.com"
                                                },
                                                "qualification": {
                                                    "type": "string",
                                                    "description": "Intern's educational qualification",
                                                    "example": "BE"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "user not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "summary": "General Logout API.",
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Logged out successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Unauthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/resetpassword": {
            "post": {
                "summary": "Reset Password API.",
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "currentpassword": {
                                        "type": "string",
                                        "description": "The current password.",
                                        "example": "password"
                                    },
                                    "newpassword": {
                                        "type": "string",
                                        "description": "The new password.",
                                        "example": "password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Password updated successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Error in processing request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Unauthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "User not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/updatepassword": {
            "post": {
                "summary": "Update Password API.",
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "newpassword": {
                                        "type": "string",
                                        "description": "The new password.",
                                        "example": "password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Password updated successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Error in processing request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Unauthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "User not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "number",
                                            "description": "the api call status",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "the api message",
                                            "example": "Server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "batch": {
            "get": {
                "summary": "List all batches",
                "tags": [
                    "Batch"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a batch",
                "tags": [
                    "Batch"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "batch/{id}": {
            "get": {
                "summary": "Fetch the details of a selected batch",
                "tags": [
                    "Batch"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a selected batch",
                "tags": [
                    "Batch"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "delete a selected batch",
                "tags": [
                    "Batch"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "course": {
            "get": {
                "summary": "List all courses",
                "tags": [
                    "Course"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a course",
                "tags": [
                    "Course"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "course/{id}": {
            "get": {
                "summary": "Fetch the details of a selected course",
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a selected course",
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "delete a selected course",
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "intern": {
            "get": {
                "summary": "List all interns",
                "tags": [
                    "Intern"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create an intern",
                "tags": [
                    "Intern"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "intern/{id}": {
            "get": {
                "summary": "Fetch the details of a selected intern",
                "tags": [
                    "Intern"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a selected intern",
                "tags": [
                    "Intern"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "delete a selected intern",
                "tags": [
                    "Intern"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "intern/setuser": {
            "put": {
                "summary": "update a selected intern to have a userid",
                "tags": [
                    "Intern"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "lead": {
            "get": {
                "summary": "List all leads",
                "tags": [
                    "Lead"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a lead",
                "tags": [
                    "Lead"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "lead/{id}": {
            "get": {
                "summary": "Fetch the details of a selected lead",
                "tags": [
                    "Lead"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a selected lead",
                "tags": [
                    "Lead"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "delete a selected lead",
                "tags": [
                    "Lead"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "lead/setintern": {
            "put": {
                "summary": "move a selected lead to intern",
                "tags": [
                    "Lead"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "ledger": {
            "get": {
                "summary": "List all ledger entries",
                "tags": [
                    "Ledger"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a ledger",
                "tags": [
                    "Ledger"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "ledger/{id}": {
            "get": {
                "summary": "Fetch the details of a selected ledger entry",
                "tags": [
                    "Ledger"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a selected ledger entry",
                "tags": [
                    "Ledger"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "delete a selected ledger entry",
                "tags": [
                    "Ledger"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "ledger/filter/{year}/{month}/{day}": {
            "get": {
                "summary": "Fetch the details of a selected ledger entry",
                "tags": [
                    "Ledger"
                ],
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year of the selected date",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "Month of the selected date",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "day",
                        "in": "path",
                        "description": "Day of the selected date",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "review": {
            "post": {
                "summary": "Create a review",
                "tags": [
                    "Review"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "review/listall": {
            "get": {
                "summary": "List all reviews",
                "tags": [
                    "Review"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "review/byintern": {
            "get": {
                "summary": "List all reviews by an intern",
                "tags": [
                    "Review"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "review/byinternonday/{year}/{month}/{day}": {
            "get": {
                "summary": "Fetch the review by an intern for a selected date",
                "tags": [
                    "Review"
                ],
                "parameters": [
                    {
                        "name": "year",
                        "in": "path",
                        "description": "Year of the selected date",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "month",
                        "in": "path",
                        "description": "Month of the selected date",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "day",
                        "in": "path",
                        "description": "Day of the selected date",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "tutor": {
            "get": {
                "summary": "List all tutors",
                "tags": [
                    "Tutor"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a tutor",
                "tags": [
                    "Tutor"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "tutor/{id}": {
            "get": {
                "summary": "Fetch the details of a selected tutor",
                "tags": [
                    "Tutor"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "summary": "Update a selected tutor",
                "tags": [
                    "Tutor"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "delete a selected tutor",
                "tags": [
                    "Tutor"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "tutor/setuser": {
            "put": {
                "summary": "update a selected tutor to have a userid",
                "tags": [
                    "Tutor"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "user": {
            "get": {
                "summary": "List all users",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a user",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "user/{id}": {
            "get": {
                "summary": "Fetch the details of a selected user",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "delete a selected user",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "credentials": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username.",
                        "example": "emailid"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password.",
                        "example": "password"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}